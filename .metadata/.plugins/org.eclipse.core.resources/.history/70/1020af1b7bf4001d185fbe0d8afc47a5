package com.example.Springdatasources.config;

import javax.persistence.EntityManagerFactory;
import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.boot.autoconfigure.jdbc.DataSourceProperties;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.data.jpa.repository.config.EnableJpaRepositories;
import org.springframework.orm.jpa.JpaTransactionManager;
import org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean;
import org.springframework.transaction.PlatformTransactionManager;

@Configuration
@EnableJpaRepositories(
		entityManagerFactoryRef = "userEntityManagerFactory",
		basePackages = {
		"com.example.Springdatasources.User.repositry"
		})
public class Userconfig {
	
	/*
	 * @Bean(name="userdataSource")
	 * 
	 * @ConfigurationProperties(prefix = "spring.datasource.user") public DataSource
	 * dataSource() { return DataSourceBuilder.create().build(); }
	 */
	
	
    @Bean(name="userProperties")
    @ConfigurationProperties("spring.datasource")
    public DataSourceProperties dataSourceProperties() {

        return new DataSourceProperties();
    }

 
    @Bean(name="userDatasource")
    @ConfigurationProperties(prefix = "spring.datasource")
    public DataSource datasource(@Qualifier("userProperties") DataSourceProperties properties){

        return properties.initializeDataSourceBuilder().build();
    }
	
	
	@Bean(name="userEntityManagerFactory")
	public LocalContainerEntityManagerFactoryBean entityManagerFactoryBean
    (EntityManagerFactoryBuilder builder, @Qualifier("userDatasource") DataSource dataSource)
	{
		  return  builder.dataSource(dataSource)
		            .packages("com.example.Springdatasources.User")
		            .persistenceUnit("UserEntity").build();
			
	}
	
	@Bean(name = "userTransactionManager")
    @ConfigurationProperties("spring.jpa")
    public PlatformTransactionManager transactionManager(
            @Qualifier("userEntityManagerFactory") EntityManagerFactory entityManagerFactory) {

        return new JpaTransactionManager(entityManagerFactory);
    }

}

